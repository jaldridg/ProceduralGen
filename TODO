
LAKE ADVENTURE
- When merging lakes, the order of the lake tiles in the lake's tileList is no longer in terms of the order the tiles were added
    This means that we can't assume the last tile in the list is the shallowest tile so the next minTile may not be downhill
        That explains why we're generating two lakes in a row - so we somehow need to sort the lakes tiles or just find a better way to determine which lake tile the minTile will come from

IN PROGRESS: RIVERS
- Problems
    > When changing the resolution, the river locations change, but it's the same map so they shouldn't in theory
- Next up
    > Most rivers don't flow to the ocean, which is not how rivers work - recursive solution?

TODO
- Clear the //TODOs in code
- Why do tiles get added to lakes if lakes are added to tiles?
- Make folders for the classes and structure the project instead of throwing everything in the same folder
- Remove the normalization of height by simpily generating heights within range
- Use shorts for height to reduce memory and open up bitwise operations
- Sort the heights using some nlogn algo
    > Then, we can only generate rivers if there's a mountain in the first place since a lot of islands aren't very tall
- More types of maps like a mountain map
- Scrollable terrain, or maps too big to fit on the screen that can be dragged around
- Biomes by procedurally generating temperature and moisture
- Orthogonal rendering?!?!